<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 声明凭证匹配器 -->
<!--	<bean id="credentialsMatcher"-->
<!--		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
<!--		<property name="hashAlgorithmName" value="md5"></property>-->
<!--		<property name="hashIterations" value="2"></property>-->
<!--	</bean>-->

	<!-- 声明userRealm -->
	<bean id="userRealm" class="com.dlt.sys.realm.ShiroRealm">
		<!-- 注入凭证匹配器 -->
<!--		<property name="credentialsMatcher" ref="credentialsMatcher"></property>-->
	</bean>

	<!--缓存管理器交给spring ioc 容器管理-->
	<bean name="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"/>

	<!-- 配置SecurityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入realm -->
		<property name="realm" ref="userRealm"/>
		<!--注入缓存管理器-->
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 配置shiro的过滤器 这里面的id必须和web.xml里面的配置一样 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"/>
<!--		 注入未登陆的跳转页面 默认的是webapp/login.jsp-->
		<property name="loginUrl" value="/login/login"/>
		<!-- 注入未授权的访问页面 -->
		<!-- <property name="unauthorizedUrl" value="/unauthorized.jsp"></property> -->
		<!-- 配置过滤器链 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/lib/** = anon
				<!-- 放行index.jsp -->
				/login.jsp*=anon
				<!-- 放行跳转到登陆页面的路径 -->
<!--				/login/login*=anon-->
				<!-- 放行登陆的请求 -->
				/login/login*=anon
				<!-- 设置登出的路径 -->
				/user/logout*=logout
				<!-- 设置其它路径全部拦截 -->
				/**=authc
			</value>
		</property>

	</bean>

	<!--
            使用SecurityUtils将securityManager设置到运行环境中
            SecurityUtils.setSecurityManager(securityManager);
        -->
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>

</beans>
